x-environment-shared: &SHARED
  POSTGRES_USER: "${POSTGRES_USER:-postgres}"
  POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
  POSTGRES_HOST: "${POSTGRES_HOST:-db-master}"
  POSTGRES_PORT: "${POSTGRES_PORT:-5432}"
  POSTGRES_DATABASE: "${POSTGRES_DATABASE:-postgres}"
  AUTH_HOST: "${AUTH_HOST:-auth-service}"
  AUTH_PORT: "${AUTH_PORT:-3000}"

services:
  db-master:
    image: "citusdata/citus:13.0.3"
    ports: [ "${DB_MASTER_EXTERNAL_PORT:-5432}:5432" ]
    labels: [ "com.citusdata.role=Master" ]
    volumes:
      - ./pg_healthcheck:/usr/local/bin/pg_healthcheck
      - ./database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD", "/usr/local/bin/pg_healthcheck"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s
    environment: &AUTH
      POSTGRES_USER: "${POSTGRES_USER:-postgres}"
      POSTGRES_PASSWORD: "${POSTGRES_PASSWORD}"
      PGUSER: "${POSTGRES_USER:-postgres}"
      PGPASSWORD: "${POSTGRES_PASSWORD}"
      POSTGRES_HOST_AUTH_METHOD: "${POSTGRES_HOST_AUTH_METHOD:-trust}"

  # can scale this and replicate as much as needed
  db-worker:
    image: "citusdata/citus:13.0.3"
    labels: [ "com.citusdata.role=Worker" ]
    environment: *AUTH

  frontend:
    build:
      context: frontend
      args:
        VITE_API_BASE_URL: "http://localhost:${SERVER_PORT}/api"
    expose:
      - 80

  # only published port on the master machine
  server:
    image: "nginx:1.27"
    depends_on:
      - frontend
      - account-service
      - product-service
      - auth-service
      - e-wallet-service
    ports:
      - "${SERVER_PORT}:80"
    volumes:
      - "./server/nginx.conf:/etc/nginx/nginx.conf:ro"

  account-service:
    build:
      context: services/account
    depends_on:
      db-master:
        condition: service_healthy
    environment:
      PORT: 3000
      <<: *SHARED

  product-service:
    build:
      context: services/products
    depends_on:
      db-master:
        condition: service_healthy
    environment:
      PORT: 3000
      <<: *SHARED

  auth-service:
    build:
      context: services/authentication
    environment:
      PORT: 3000
      JWT_SECRET: "${JWT_SECRET}"

  e-wallet-service:
    build:
      context: services/e-wallet
    depends_on:
      db-master:
        condition: service_healthy
    environment:
      PORT: 8000
      <<: *SHARED